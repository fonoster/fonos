{
  "name": "root",
  "version": "independent",
  "private": true,
  "author": "Pedro Sanders <psanders@fonoster.com>",
  "license": "MIT",
  "description": "Then open-source alternative to Twilio",
  "main": "dist/index",
  "types": "dist/index",
  "workspaces": [
    "mods/*"
  ],
  "scripts": {
    "start:webui": "NODE_ENV=dev cd mods/webui && npm start",
    "start:storybook": "NODE_ENV=dev cd mods/webui && npm run storybook",
    "start:apiserver": "cross-env NODE_ENV=dev LOGS_LEVEL=verbose nodemon --watch mods/apiserver mods/apiserver/src/index.ts",
    "start:voice": "cross-env NODE_ENV=dev LOGS_LEVEL=verbose nodemon --watch mods/voice /voice/src/demo.ts",
    "start:autopilot": "cross-env NODE_ENV=dev ASSISTANT=$(pwd)/config/assistant.json LOGS_LEVEL=verbose nodemon --watch mods/autopilot mods/autopilot/src/server.ts",
    "start:services": "cross-env docker compose -f compose.yaml -f compose.dev.yaml up routr nats envoy influxdb postgres adminer mailhog rtpengine asterisk simplephone -d --remove-orphans",
    "start:sdk-test": "npx serve -s mods/sdk/public -l 9000",
    "start:audiosocket": "cross-env NODE_ENV=dev LOGS_LEVEL=verbose nodemon --watch mods/streams mods/streams/src/example.ts",
    "start:micVad": "cross-env NODE_ENV=dev LOGS_LEVEL=verbose nodemon --watch mods/autopilot/src/vad mods/autopilot/src/vad/micVadTest.ts",
    "stop:services": "cross-env docker compose -f compose.yaml -f compose.dev.yaml down",
    "prebuild": "npm run generate:prisma-clients",
    "build": "lerna run build",
    "postbuild": "npm run copy:hbstemplates",
    "format": "prettier --write mods/**/src",
    "clean": "rimraf mods/**/dist mods/**/node_modules mods/**/package-lock.json node_modules package-lock.json",
    "prepare": "husky",
    "copy:hbstemplates": "node .scripts/copy-hbs.js",
    "db:migrate": "npx prisma migrate dev --schema ./mods/apiserver/schema.prisma --name changeme --preview-feature && npx prisma migrate dev --schema ./mods/identity/schema.prisma --name changeme --preview-feature",
    "db:seed": "tsx ./mods/apiserver/src/core/seed.ts",
    "generate:docs": "node .scripts/gen-docs.js",
    "generate:readme": "lerna run generate:readme",
    "generate:keypair": ".scripts/gen-keypair.sh",
    "generate:protos": ".scripts/gen-code-proto.sh",
    "postgenerate:protos": "lerna run build",
    "generate:prisma-clients": "npx prisma generate --schema ./mods/apiserver/schema.prisma && npx prisma generate --schema ./mods/identity/schema.prisma",
    "check:updates": "lerna exec -- npx npm-check-updates",
    "test": "cross-env LOGS_LEVEL=none NODE_ENV=dev mocha --timeout 30000 mods/**/*.test.ts",
    "pretest": "npm run generate:keypair",
    "integration": "cross-env LOGS_LEVEL=none NODE_ENV=dev mocha --slow 50000 --timeout 10000 mods/**/node.integration.ts",
    "preintegration:web": "npx playwright install && npx playwright install-deps",
    "integration:web": "web-test-runner --node-resolve --playwright --browsers chromium webkit firefox",
    "release": "lerna publish --yes --no-git-reset --dist-tag next $(./.scripts/next-release.sh) --message \"chore(release): publish %s [skip ci]\"",
    "release:prerelease": "lerna publish --dist-tag next",
    "release:frompackages": "lerna publish from-package",
    "bump:version": "rimraf mods/**/.lerna-changed-buster-* && lerna exec -- touch .lerna-changed-buster-$RANDOM"
  },
  "prisma": {
    "seed": "tsx ./mods/apiserver/src/core/seed.ts"
  },
  "devDependencies": {
    "@commitlint/cli": "^19.2.2",
    "@commitlint/config-conventional": "^19.2.2",
    "@types/chai": "^5.0.1",
    "@types/chai-as-promised": "^8.0.1",
    "@types/mocha": "^10.0.6",
    "@types/node": "^20.12.7",
    "@types/sinon": "^17.0.3",
    "@types/sinon-chai": "^4.0.0",
    "@types/webrtc": "^0.0.44",
    "chai-as-promised": "^8.0.1",
    "cross-env": "^7.0.3",
    "globals": "^15.13.0",
    "grpc_tools_node_protoc_ts": "^5.3.3",
    "grpc-tools": "^1.12.4",
    "husky": "^9.0.11",
    "jsdoc-to-markdown": "^9.1.1",
    "lerna": "^8.1.7",
    "mocha": "^11.0.1",
    "nodemon": "^3.1.9",
    "prettier": "^3.4.2",
    "prisma": "^6.0.1",
    "rimraf": "^6.0.1",
    "sinon": "^19.0.2",
    "sinon-chai": "^4.0.0",
    "tsx": "^4.19.2"
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/fonoster/fonoster.git"
  },
  "bugs": {
    "url": "https://github.com/fonoster/fonoster/issues"
  },
  "nodemonConfig": {
    "watch": [
      "./mods/**"
    ],
    "ext": "ts",
    "exec": "tsx",
    "ignore": "**/*.d.ts"
  },
  "directories": {
    "src": "src",
    "test": "test"
  },
  "files": [
    "dist"
  ],
  "engines": {
    "node": ">=20.11.1"
  },
  "dependencies": {
    "@prisma/client": "^6.0.1"
  },
  "optionalDependencies": {
    "@rollup/rollup-linux-arm64-gnu": "^4.28.1",
    "@rollup/rollup-linux-arm64-musl": "^4.28.1",
    "@rollup/rollup-linux-x64-gnu": "^4.28.1",
    "@rollup/rollup-linux-x64-musl": "^4.28.1"
  }
}
