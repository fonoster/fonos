/**
 * MIT License
 * Copyright (c) 2021 Fonoster Inc
 *
 * The SecretMananger proto contains the artificts for Secrets administration
 * such as creation and deployment.
 */
 syntax = "proto3";

 package fonos.secrets.v1beta1;
 
 import "common.proto";
 
 service Secrets {
   // Lists Secret 
   rpc ListSecretsId (ListSecretIdRequest) returns (ListSecretIdResponse) {};
   // Gets Secret with the Secret-name
   rpc GetSecret (GetSecretRequest) returns (GetSecretResponse) {};
   rpc CreateSecret (CreateSecretRequest) returns (CreateSecretResponse) {};
   // Peforms a hard delete of the Secret resource
   rpc DeleteSecret (DeleteSecretRequest) returns (fonos.common.v1beta1.Empty) {};
 }
 
 message ListSecretIdRequest {
   // The maximum number of items to return.
   int32 page_size = 1;
   // The next_page_token value returned from a previous List request, if any.
   string page_token = 2;
   // Level of detail of the individual entities
   fonos.common.v1beta1.View view = 3;
 }
 
 message ListSecretIdResponse {
   // There will be a maximum number of items returned based on the page_size field
   // in the request.
   repeated SecretName secrets = 1;
   // Token to retrieve the next page of results, or empty if there are no
   // more results in the list.
   string next_page_token = 2;
 }
 
 message GetSecretRequest {
   string name = 1;
   fonos.common.v1beta1.View view = 2;
 }
 
 message GetSecretResponse {
   string name = 1;
   string secret = 2;
 }
 
 message CreateSecretRequest {
  string name = 1;
  string secret = 2;
 }
 
 message CreateSecretResponse {
  string name = 1;

 }
 
 message DeleteSecretRequest {
  string name = 1;
 }
 
 message Secret {
  string name = 1;
  string secret = 2;
 }

 message SecretName {
   string name = 1;
 }
 
 
 