"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[8885],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>g});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var u=r.createContext({}),i=function(e){var t=r.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},p=function(e){var t=i(e.components);return r.createElement(u.Provider,{value:t},e.children)},s="mdxType",f={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,u=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),s=i(n),d=a,g=s["".concat(u,".").concat(d)]||s[d]||f[d]||o;return n?r.createElement(g,l(l({ref:t},p),{},{components:n})):r.createElement(g,l({ref:t},p))}));function g(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,l=new Array(o);l[0]=d;var c={};for(var u in t)hasOwnProperty.call(t,u)&&(c[u]=t[u]);c.originalType=e,c[s]="string"==typeof e?e:a,l[1]=c;for(var i=2;i<o;i++)l[i]=n[i];return r.createElement.apply(null,l)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},1743:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>u,contentTitle:()=>l,default:()=>f,frontMatter:()=>o,metadata:()=>c,toc:()=>i});var r=n(7462),a=(n(7294),n(3905));const o={},l="Configuring Vault",c={unversionedId:"operator/configuring-vault",id:"operator/configuring-vault",title:"Configuring Vault",description:"Fonoster offers support for Secret management based on Hashicorp Vault.",source:"@site/docs/operator/configuring-vault.md",sourceDirName:"operator",slug:"/operator/configuring-vault",permalink:"/docs/operator/configuring-vault",draft:!1,editUrl:"https://github.com/fonoster/website/edit/main/docs/docs/operator/configuring-vault.md",tags:[],version:"current",frontMatter:{}},u={},i=[],p={toc:i},s="wrapper";function f(e){let{components:t,...n}=e;return(0,a.kt)(s,(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"configuring-vault"},"Configuring Vault"),(0,a.kt)("p",null,"Fonoster offers support for Secret management based on ",(0,a.kt)("a",{parentName:"p",href:"https://www.vaultproject.io/"},"Hashicorp Vault"),"."),(0,a.kt)("p",null,"As with anything related to managing data, we recommend backing up your secrets using a ",(0,a.kt)("a",{parentName:"p",href:"https://www.hashicorp.com/blog/vault-on-the-hashicorp-cloud-platform"},"managed service"),". However, to help you get started, we include a basic Vault deployment in the operator's scripts."),(0,a.kt)("p",null,"Create an empty folder and download Vault's configuration files with:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"mkdir vault\ncd vault\ncurl -o vault_policy.hcl https://raw.githubusercontent.com/fonoster/fonoster/main/etc/vault_policy.hcl\n")),(0,a.kt)("p",null,"To get your Vault container ID, run:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"CONTAINER_ID=$(docker ps --no-trunc -aqf name=vault)\n")),(0,a.kt)("p",null,"Set the Vault address:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"export VAULT_ADDR=http://localhost:8200\n")),(0,a.kt)("p",null,"Now, initialize Vault:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"docker exec -it -e VAULT_ADDR=$VAULT_ADDR $CONTAINER_ID vault operator init -key-shares=1 -key-threshold=1\n")),(0,a.kt)("p",null,"This will produce an output with an unseal key and the initial root token."),(0,a.kt)("p",null,"Unseal Vault using the unseal key:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"docker exec -it -e VAULT_ADDR=$VAULT_ADDR $CONTAINER_ID vault operator unseal <UnsealKey>\n")),(0,a.kt)("p",null,"Set the root token environment variable:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"export VAULT_TOKEN=<InitialRootToken>\n")),(0,a.kt)("p",null,"Finally, configure Vault policies and enable secrets and authentication methods:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"docker cp vault_policy.hcl $CONTAINER_ID:/vault/config/vault_policy.hcl\ndocker exec -it -e VAULT_ADDR=$VAULT_ADDR -e VAULT_TOKEN=$VAULT_TOKEN $CONTAINER_ID vault policy write fonoster-secrets-policy /vault/config/vault_policy.hcl\ndocker exec -it -e VAULT_ADDR=$VAULT_ADDR -e VAULT_TOKEN=$VAULT_TOKEN $CONTAINER_ID vault secrets enable -path=secret kv\ndocker exec -it -e VAULT_ADDR=$VAULT_ADDR -e VAULT_TOKEN=$VAULT_TOKEN $CONTAINER_ID vault auth enable approle\n")),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},"Make sure to save the root token and unseal the key in a safe place. You will need them to configure the operator and to unseal Vault in case of a restart.")))}f.isMDXComponent=!0}}]);