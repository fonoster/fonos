"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[1617],{3905:(e,t,n)=>{n.d(t,{Zo:()=>i,kt:()=>c});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},l=Object.keys(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var p=a.createContext({}),g=function(e){var t=a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},i=function(e){var t=g(e.components);return a.createElement(p.Provider,{value:t},e.children)},u="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,l=e.originalType,p=e.parentName,i=o(e,["components","mdxType","originalType","parentName"]),u=g(n),d=r,c=u["".concat(p,".").concat(d)]||u[d]||m[d]||l;return n?a.createElement(c,s(s({ref:t},i),{},{components:n})):a.createElement(c,s({ref:t},i))}));function c(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=n.length,s=new Array(l);s[0]=d;var o={};for(var p in t)hasOwnProperty.call(t,p)&&(o[p]=t[p]);o.originalType=e,o[u]="string"==typeof e?e:r,s[1]=o;for(var g=2;g<l;g++)s[g]=n[g];return a.createElement.apply(null,s)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},5873:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>s,default:()=>m,frontMatter:()=>l,metadata:()=>o,toc:()=>g});var a=n(7462),r=(n(7294),n(3905));const l={},s=void 0,o={unversionedId:"reference/Agents",id:"reference/Agents",title:"Agents",description:"Agents \u21d0 APIClient",source:"@site/docs/reference/Agents.md",sourceDirName:"reference",slug:"/reference/Agents",permalink:"/docs/reference/Agents",draft:!1,editUrl:"https://github.com/fonoster/website/edit/main/docs/docs/reference/Agents.md",tags:[],version:"current",frontMatter:{},sidebar:"docs",previous:{title:"Domains",permalink:"/docs/reference/Domains"},next:{title:"CallManager",permalink:"/docs/reference/CallManager"}},p={},g=[{value:"Agents \u21d0 <code>APIClient</code>",id:"agents--apiclient",level:2},{value:"new Agents(options)",id:"new-agentsoptions",level:3},{value:"agents.createAgent(request) \u21d2 <code>Promise.&lt;CreateAgentResponse&gt;</code>",id:"agentscreateagentrequest--promisecreateagentresponse",level:3},{value:"agents.getAgent(ref) \u21d2 <code>Promise.&lt;GetAgentResponse&gt;</code>",id:"agentsgetagentref--promisegetagentresponse",level:3},{value:"agents.updateAgent(request) \u21d2 <code>Promise.&lt;UpdateAgentResponse&gt;</code>",id:"agentsupdateagentrequest--promiseupdateagentresponse",level:3},{value:"agents.listAgents(request) \u21d2 <code>Promise.&lt;ListAgentsResponse&gt;</code>",id:"agentslistagentsrequest--promiselistagentsresponse",level:3},{value:"agents.deleteAgent(ref)",id:"agentsdeleteagentref",level:3}],i={toc:g},u="wrapper";function m(e){let{components:t,...n}=e;return(0,r.kt)(u,(0,a.Z)({},i,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("a",{name:"Agents"}),(0,r.kt)("h2",{id:"agents--apiclient"},"Agents \u21d0 ",(0,r.kt)("code",null,"APIClient")),(0,r.kt)("p",null,"Use Fonoster Agents, a capability of Fonoster SIP Proxy subsystem,\nto create, update, get and delete Agents. Agents requires of a\nrunning Fonoster deployment."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Kind"),": global class",(0,r.kt)("br",{parentName:"p"}),"\n",(0,r.kt)("strong",{parentName:"p"},"Extends"),": ",(0,r.kt)("code",null,"APIClient"),(0,r.kt)("br",{parentName:"p"}),"\n",(0,r.kt)("strong",{parentName:"p"},"See"),": module:core:APIClient  "),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#Agents"},"Agents")," \u21d0 ",(0,r.kt)("code",null,"APIClient"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#new_Agents_new"},"new Agents(options)")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#Agents+createAgent"},".createAgent(request)")," \u21d2 ",(0,r.kt)("code",null,"Promise.","<","CreateAgentResponse",">")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#Agents+getAgent"},".getAgent(ref)")," \u21d2 ",(0,r.kt)("code",null,"Promise.","<","GetAgentResponse",">")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#Agents+updateAgent"},".updateAgent(request)")," \u21d2 ",(0,r.kt)("code",null,"Promise.","<","UpdateAgentResponse",">")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#Agents+listAgents"},".listAgents(request)")," \u21d2 ",(0,r.kt)("code",null,"Promise.","<","ListAgentsResponse",">")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#Agents+deleteAgent"},".deleteAgent(ref)"))))),(0,r.kt)("a",{name:"new_Agents_new"}),(0,r.kt)("h3",{id:"new-agentsoptions"},"new Agents(options)"),(0,r.kt)("p",null,"Constructs a new Agents object."),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Param"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"options"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"ClientOptions")),(0,r.kt)("td",{parentName:"tr",align:null},"Options to indicate the objects endpoint")))),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Example"),"  "),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},'const Fonoster = require("@fonoster/sdk")\nconst agents = new Fonoster.Agents()\n\nconst request = {\n  name: "John Doe",\n  username: "john",\n  secret: "1234",\n  domains: ["sip.local"]\n}\n\nagents.createAgent(request)\n.then(result => {\n  console.log(result)             // successful response\n}).catch(e => console.error(e))   // an error occurred\n')),(0,r.kt)("a",{name:"Agents+createAgent"}),(0,r.kt)("h3",{id:"agentscreateagentrequest--promisecreateagentresponse"},"agents.createAgent(request) \u21d2 ",(0,r.kt)("code",null,"Promise.","<","CreateAgentResponse",">")),(0,r.kt)("p",null,"Creates a new Agent on the SIP Proxy subsystem."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Kind"),": instance method of ",(0,r.kt)("a",{parentName:"p",href:"#Agents"},(0,r.kt)("code",null,"Agents")),"  "),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Param"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"request"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"CreateAgentRequest")),(0,r.kt)("td",{parentName:"tr",align:null},"Request for the provision of a new Agent")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"request.name"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"string")),(0,r.kt)("td",{parentName:"tr",align:null},"Friendly name for the SIP device")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"request.username"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"string")),(0,r.kt)("td",{parentName:"tr",align:null},"Agent's credential username")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"request.secret"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"string")),(0,r.kt)("td",{parentName:"tr",align:null},"Agent's credential secret")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"request.privacy"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"Privacy")),(0,r.kt)("td",{parentName:"tr",align:null},"If set to Privacy.PRIVATE Fonoster removes identifiable information for the requests. Defaults to Privacy.NONE")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"request.domains"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"Array.","<","string",">")),(0,r.kt)("td",{parentName:"tr",align:null},"List of domains this Agent has access to")))),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Example"),"  "),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},'const request = {\n  name: "John Doe",\n  username: "john",\n  secret: "1234",\n  domains: ["sip.local"]\n  privacy: Privacy.PRIVATE\n}\n\nagents.createAgent(request)\n.then(result => {\n  console.log(result)            // returns the CreateAgentResponse interface\n}).catch(e => console.error(e))  // an error occurred\n')),(0,r.kt)("a",{name:"Agents+getAgent"}),(0,r.kt)("h3",{id:"agentsgetagentref--promisegetagentresponse"},"agents.getAgent(ref) \u21d2 ",(0,r.kt)("code",null,"Promise.","<","GetAgentResponse",">")),(0,r.kt)("p",null,"Retrives an Agent by reference."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Kind"),": instance method of ",(0,r.kt)("a",{parentName:"p",href:"#Agents"},(0,r.kt)("code",null,"Agents")),(0,r.kt)("br",{parentName:"p"}),"\n",(0,r.kt)("strong",{parentName:"p"},"Returns"),": ",(0,r.kt)("code",null,"Promise.","<","GetAgentResponse",">")," - The agent",(0,r.kt)("br",{parentName:"p"}),"\n",(0,r.kt)("strong",{parentName:"p"},"Throws"),":"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"if ref is null or Agent does not exist")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Param"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"ref"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"string")),(0,r.kt)("td",{parentName:"tr",align:null},"Reference to Agent")))),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Example"),"  "),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},'const ref = "aynB1z0tzd";\n\nagents.getAgent(ref)\n.then(result => {\n  console.log(result)             // returns the GetAgentResponse interface\n}).catch(e => console.error(e))   // an error occurred\n')),(0,r.kt)("a",{name:"Agents+updateAgent"}),(0,r.kt)("h3",{id:"agentsupdateagentrequest--promiseupdateagentresponse"},"agents.updateAgent(request) \u21d2 ",(0,r.kt)("code",null,"Promise.","<","UpdateAgentResponse",">")),(0,r.kt)("p",null,"Update an Agent at the SIP Proxy subsystem."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Kind"),": instance method of ",(0,r.kt)("a",{parentName:"p",href:"#Agents"},(0,r.kt)("code",null,"Agents")),"  "),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Param"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"request"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"UpdateAgentRequest")),(0,r.kt)("td",{parentName:"tr",align:null},"Request update of an Agent")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"request.ref"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"string")),(0,r.kt)("td",{parentName:"tr",align:null},"Reference to the Agent")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"request.name"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"string")),(0,r.kt)("td",{parentName:"tr",align:null},"Friendly name for the SIP device")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"request.secret"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"string")),(0,r.kt)("td",{parentName:"tr",align:null},"Agent's credential secret")))),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Example"),"  "),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},'const request = {\n  name: "John Dee",\n  secret: "12345"\n}\n\nagents.updateAgent(request)\n.then(result => {\n  console.log(result)            // returns the UpdateAgentResponse interface\n}).catch(e => console.error(e))  // an error occurred\n')),(0,r.kt)("a",{name:"Agents+listAgents"}),(0,r.kt)("h3",{id:"agentslistagentsrequest--promiselistagentsresponse"},"agents.listAgents(request) \u21d2 ",(0,r.kt)("code",null,"Promise.","<","ListAgentsResponse",">")),(0,r.kt)("p",null,"List registered Agents in Fonoster SIP Proxy subsystem."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Kind"),": instance method of ",(0,r.kt)("a",{parentName:"p",href:"#Agents"},(0,r.kt)("code",null,"Agents")),(0,r.kt)("br",{parentName:"p"}),"\n",(0,r.kt)("strong",{parentName:"p"},"Returns"),": ",(0,r.kt)("code",null,"Promise.","<","ListAgentsResponse",">")," - Paginated List of Agents  "),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Param"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"request"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"ListAgentsRequest")),(0,r.kt)("td",{parentName:"tr",align:null},"Optional parameter with size and token for the request")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"request.pageSize"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"number")),(0,r.kt)("td",{parentName:"tr",align:null},"Elements per page (defaults to 20)")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"request.pageToken"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"string")),(0,r.kt)("td",{parentName:"tr",align:null},"The next_page_token value returned from a previous List request, if any")))),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Example"),"  "),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"const request = {\n   pageSize: 20,\n   pageToken: 2\n}\n\nagents.listAgents(request)\n.then(() => {\n  console.log(result)            // returns a ListAgentsResponse interface\n}).catch(e => console.error(e))  // an error occurred\n")),(0,r.kt)("a",{name:"Agents+deleteAgent"}),(0,r.kt)("h3",{id:"agentsdeleteagentref"},"agents.deleteAgent(ref)"),(0,r.kt)("p",null,"Deletes an Agent from the SIP Proxy subsystem."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Kind"),": instance method of ",(0,r.kt)("a",{parentName:"p",href:"#Agents"},(0,r.kt)("code",null,"Agents")),"  "),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Param"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"ref"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"string")),(0,r.kt)("td",{parentName:"tr",align:null},"Agent's reference")))),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Example"),"  "),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},'const ref = "aynB1z0tzd"\n\nagents.deleteAgent(ref)\n.then(() => {\n  console.log("done")            // returns a reference of the Agent\n}).catch(e => console.error(e))  // an error occurred\n')))}m.isMDXComponent=!0}}]);