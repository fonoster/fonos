"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[2260],{3905:(e,t,n)=>{n.d(t,{Zo:()=>m,kt:()=>k});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var p=a.createContext({}),i=function(e){var t=a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},m=function(e){var t=i(e.components);return a.createElement(p.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},c=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,p=e.parentName,m=s(e,["components","mdxType","originalType","parentName"]),u=i(n),c=r,k=u["".concat(p,".").concat(c)]||u[c]||d[c]||o;return n?a.createElement(k,l(l({ref:t},m),{},{components:n})):a.createElement(k,l({ref:t},m))}));function k(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,l=new Array(o);l[0]=c;var s={};for(var p in t)hasOwnProperty.call(t,p)&&(s[p]=t[p]);s.originalType=e,s[u]="string"==typeof e?e:r,l[1]=s;for(var i=2;i<o;i++)l[i]=n[i];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}c.displayName="MDXCreateElement"},2606:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>l,default:()=>d,frontMatter:()=>o,metadata:()=>s,toc:()=>i});var a=n(7462),r=(n(7294),n(3905));const o={},l=void 0,s={unversionedId:"reference/VoiceResponse",id:"reference/VoiceResponse",title:"VoiceResponse",description:"VoiceResponse \u21d0 Verb",source:"@site/docs/reference/VoiceResponse.md",sourceDirName:"reference",slug:"/reference/VoiceResponse",permalink:"/docs/reference/VoiceResponse",draft:!1,editUrl:"https://github.com/fonoster/website/edit/main/docs/docs/reference/VoiceResponse.md",tags:[],version:"current",frontMatter:{},sidebar:"docs",previous:{title:"Overview",permalink:"/docs/reference/overview"},next:{title:"Users",permalink:"/docs/reference/Users"}},p={},i=[{value:"VoiceResponse \u21d0 <code>Verb</code>",id:"voiceresponse--verb",level:2},{value:"new VoiceResponse(request)",id:"new-voiceresponserequest",level:3},{value:"voiceResponse.use(plugin)",id:"voiceresponseuseplugin",level:3},{value:"voiceResponse.play(media, options)",id:"voiceresponseplaymedia-options",level:3},{value:"voiceResponse.say(text, options)",id:"voiceresponsesaytext-options",level:3},{value:"voiceResponse.gather(options)",id:"voiceresponsegatheroptions",level:3},{value:"voiceResponse.sgather(options) \u21d2 <code>SGatherStream</code>",id:"voiceresponsesgatheroptions--sgatherstream",level:3},{value:"voiceResponse.dtmf(options)",id:"voiceresponsedtmfoptions",level:3},{value:"voiceResponse.dial(destination, options) \u21d2 <code>StatusStream</code>",id:"voiceresponsedialdestination-options--statusstream",level:3},{value:"voiceResponse.playback(playbackId)",id:"voiceresponseplaybackplaybackid",level:3},{value:"voiceResponse.on(handler)",id:"voiceresponseonhandler",level:3},{value:"voiceResponse.mute(options)",id:"voiceresponsemuteoptions",level:3},{value:"voiceResponse.unmute(options)",id:"voiceresponseunmuteoptions",level:3},{value:"voiceResponse.answer()",id:"voiceresponseanswer",level:3},{value:"voiceResponse.hangup()",id:"voiceresponsehangup",level:3},{value:"voiceResponse.record(options) \u21d2 <code>Promise.&lt;RecordResult&gt;</code>",id:"voiceresponserecordoptions--promiserecordresult",level:3}],m={toc:i},u="wrapper";function d(e){let{components:t,...n}=e;return(0,r.kt)(u,(0,a.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("a",{name:"VoiceResponse"}),(0,r.kt)("h2",{id:"voiceresponse--verb"},"VoiceResponse \u21d0 ",(0,r.kt)("code",null,"Verb")),(0,r.kt)("p",null,"Use the VoiceResponse object, to construct advance Interactive\nVoice Response (IVR) applications."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Kind"),": global class",(0,r.kt)("br",{parentName:"p"}),"\n",(0,r.kt)("strong",{parentName:"p"},"Extends"),": ",(0,r.kt)("code",null,"Verb"),(0,r.kt)("br",{parentName:"p"}),"\n",(0,r.kt)("strong",{parentName:"p"},"See"),": module:core:APIClient  "),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#VoiceResponse"},"VoiceResponse")," \u21d0 ",(0,r.kt)("code",null,"Verb"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#new_VoiceResponse_new"},"new VoiceResponse(request)")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#VoiceResponse+use"},".use(plugin)")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#VoiceResponse+play"},".play(media, options)")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#VoiceResponse+say"},".say(text, options)")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#VoiceResponse+gather"},".gather(options)")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#VoiceResponse+sgather"},".sgather(options)")," \u21d2 ",(0,r.kt)("code",null,"SGatherStream")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#VoiceResponse+dtmf"},".dtmf(options)")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#VoiceResponse+dial"},".dial(destination, options)")," \u21d2 ",(0,r.kt)("code",null,"StatusStream")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#VoiceResponse+playback"},".playback(playbackId)")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#VoiceResponse+on"},".on(handler)")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#VoiceResponse+mute"},".mute(options)")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#VoiceResponse+unmute"},".unmute(options)")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#VoiceResponse+answer"},".answer()")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#VoiceResponse+hangup"},".hangup()")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#VoiceResponse+record"},".record(options)")," \u21d2 ",(0,r.kt)("code",null,"Promise.","<","RecordResult",">"))))),(0,r.kt)("a",{name:"new_VoiceResponse_new"}),(0,r.kt)("h3",{id:"new-voiceresponserequest"},"new VoiceResponse(request)"),(0,r.kt)("p",null,"Constructs a new VoiceResponse object."),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Param"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"request"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"VoiceRequest")),(0,r.kt)("td",{parentName:"tr",align:null},"Options to indicate the objects endpoint")))),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Example"),"  "),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},'import { VoiceServer } from "@fonoster/voice";\n\nasync function handler (request, response) {\n  await response.answer();\n  await response.play("sound:hello-world");\n}\n\nconst voiceServer = new VoiceServer({base: \'/voiceapp\'})\nvoiceServer.listen(handler, { port: 3000 })\n')),(0,r.kt)("a",{name:"VoiceResponse+use"}),(0,r.kt)("h3",{id:"voiceresponseuseplugin"},"voiceResponse.use(plugin)"),(0,r.kt)("p",null,"Adds a tts or asr plugin. Only one type of plugin can be attached."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Kind"),": instance method of ",(0,r.kt)("a",{parentName:"p",href:"#VoiceResponse"},(0,r.kt)("code",null,"VoiceResponse")),(0,r.kt)("br",{parentName:"p"}),"\n",(0,r.kt)("strong",{parentName:"p"},"See")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"GoogleTTS"),(0,r.kt)("li",{parentName:"ul"},"GoogleASR")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Param"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"plugin")))),(0,r.kt)("a",{name:"VoiceResponse+play"}),(0,r.kt)("h3",{id:"voiceresponseplaymedia-options"},"voiceResponse.play(media, options)"),(0,r.kt)("p",null,"Play an audio in the channel."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Kind"),": instance method of ",(0,r.kt)("a",{parentName:"p",href:"#VoiceResponse"},(0,r.kt)("code",null,"VoiceResponse")),(0,r.kt)("br",{parentName:"p"}),"\n",(0,r.kt)("strong",{parentName:"p"},"See"),": Playback  "),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Param"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"media"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"string")),(0,r.kt)("td",{parentName:"tr",align:null},"Sound name or uri with audio file")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"options"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"PlayOptions")),(0,r.kt)("td",{parentName:"tr",align:null},"Optional parameters to alter the command's normal behavior")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"options.offset"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"string")),(0,r.kt)("td",{parentName:"tr",align:null},"Milliseconds to skip before playing. Only applies to the first URI if multiple media URIs are specified")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"options.skip"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"string")),(0,r.kt)("td",{parentName:"tr",align:null},"Milliseconds to skip for forward/reverse operations")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"options.playbackId"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"string")),(0,r.kt)("td",{parentName:"tr",align:null},"Playback identifier to use in Playback operations")))),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Example"),"  "),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},'async function handler (request, response) {\n  await response.answer();\n  await response.play("https://soundsserver:9000/sounds/hello-world.wav");\n}\n')),(0,r.kt)("a",{name:"VoiceResponse+say"}),(0,r.kt)("h3",{id:"voiceresponsesaytext-options"},"voiceResponse.say(text, options)"),(0,r.kt)("p",null,"Converts a text into a sound and sends sound to media server. To use this verb, you must\nfirst setup a TTS plugin such as GoogleTTS, or AWS PollyTTS"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Kind"),": instance method of ",(0,r.kt)("a",{parentName:"p",href:"#VoiceResponse"},(0,r.kt)("code",null,"VoiceResponse")),(0,r.kt)("br",{parentName:"p"}),"\n",(0,r.kt)("strong",{parentName:"p"},"See")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Play"),(0,r.kt)("li",{parentName:"ul"},"Voice.use")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Param"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"text"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"string")),(0,r.kt)("td",{parentName:"tr",align:null},"Converts a text into a sound and sends sound to media server")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"options"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"SayOptions")),(0,r.kt)("td",{parentName:"tr",align:null},"Optional parameters to alter the command's normal behavior")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"options.offset"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"string")),(0,r.kt)("td",{parentName:"tr",align:null},"Milliseconds to skip before playing")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"options.skip"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"string")),(0,r.kt)("td",{parentName:"tr",align:null},"Milliseconds to skip for forward/reverse operations")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"options.playbackId"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"string")),(0,r.kt)("td",{parentName:"tr",align:null},"Playback identifier to use in Playback operations")))),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Example"),"  "),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},'async function handler (request, response) {\n  await response.answer();\n  response.use(new GoogleTTS())\n  await response.say("Hello workd");   // Plays the sound using GoogleTTS\'s default values\n}\n')),(0,r.kt)("a",{name:"VoiceResponse+gather"}),(0,r.kt)("h3",{id:"voiceresponsegatheroptions"},"voiceResponse.gather(options)"),(0,r.kt)("p",null,"Waits for data entry from the user's keypad or from a speech provider."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Kind"),": instance method of ",(0,r.kt)("a",{parentName:"p",href:"#VoiceResponse"},(0,r.kt)("code",null,"VoiceResponse")),(0,r.kt)("br",{parentName:"p"}),"\n",(0,r.kt)("strong",{parentName:"p"},"Note"),": When including ",(0,r.kt)("inlineCode",{parentName:"p"},"speech")," the default timeout is 10000 (10s).",(0,r.kt)("br",{parentName:"p"}),"\n",(0,r.kt)("strong",{parentName:"p"},"See"),": SpeechProvider  "),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Param"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"options"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"GatherOptions")),(0,r.kt)("td",{parentName:"tr",align:null},"Options to select the maximum number of digits, final character, and timeout")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"options.numDigits"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"number")),(0,r.kt)("td",{parentName:"tr",align:null},"Milliseconds to skip before playing. Only applies to the first URI if multiple media URIs are specified")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"options.timeout"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"number")),(0,r.kt)("td",{parentName:"tr",align:null},"Milliseconds to wait before timeout. Defaults to 4000. Use zero for no timeout.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"options.finishOnKey"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"string")),(0,r.kt)("td",{parentName:"tr",align:null},"Optional last character to wait for. Defaults to '#'. It will not be included in the returned digits")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"options.source"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"string")),(0,r.kt)("td",{parentName:"tr",align:null},"Where to listen as input source. This option accepts ",(0,r.kt)("inlineCode",{parentName:"td"},"dtmf")," and ",(0,r.kt)("inlineCode",{parentName:"td"},"speech"),". A speech provider must be configure when including the ",(0,r.kt)("inlineCode",{parentName:"td"},"speech")," source. You might inclue both with ",(0,r.kt)("inlineCode",{parentName:"td"},"dtmf,speech"),". Defaults to ",(0,r.kt)("inlineCode",{parentName:"td"},"dtmf"))))),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Example"),"  "),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},'async function handler (request, response) {\n  await response.answer();\n  const digits = await response.gather({source: "dtmf,speech", numDigits: 3});\n  console.log("digits: " + digits);\n}\n')),(0,r.kt)("a",{name:"VoiceResponse+sgather"}),(0,r.kt)("h3",{id:"voiceresponsesgatheroptions--sgatherstream"},"voiceResponse.sgather(options) \u21d2 ",(0,r.kt)("code",null,"SGatherStream")),(0,r.kt)("p",null,"Waits for data entry from the user's keypad or from a stream speech provider. This command is different from ",(0,r.kt)("inlineCode",{parentName:"p"},"gather"),"\nin that it returns a stream of results instead of a single result. You can think of it as active listening."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Kind"),": instance method of ",(0,r.kt)("a",{parentName:"p",href:"#VoiceResponse"},(0,r.kt)("code",null,"VoiceResponse")),(0,r.kt)("br",{parentName:"p"}),"\n",(0,r.kt)("strong",{parentName:"p"},"Returns"),": ",(0,r.kt)("code",null,"SGatherStream")," - The SGatherStream fires events via the ",(0,r.kt)("inlineCode",{parentName:"p"},"on")," method for ",(0,r.kt)("inlineCode",{parentName:"p"},"transcription"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"dtmf"),", and ",(0,r.kt)("inlineCode",{parentName:"p"},"error"),". And the stream can be close\nwith the ",(0,r.kt)("inlineCode",{parentName:"p"},"close")," function.",(0,r.kt)("br",{parentName:"p"}),"\n",(0,r.kt)("strong",{parentName:"p"},"See"),": StreamSpeechProvider  "),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Param"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"options"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"SGatherOptions")),(0,r.kt)("td",{parentName:"tr",align:null},"Options object for the SGather verb")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"options.source"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"string")),(0,r.kt)("td",{parentName:"tr",align:null},"Where to listen as input source. This option accepts ",(0,r.kt)("inlineCode",{parentName:"td"},"dtmf")," and ",(0,r.kt)("inlineCode",{parentName:"td"},"speech"),". A speech provider must be configure when including the ",(0,r.kt)("inlineCode",{parentName:"td"},"speech")," source. You might inclue both with ",(0,r.kt)("inlineCode",{parentName:"td"},"dtmf,speech"),". Defaults to ",(0,r.kt)("inlineCode",{parentName:"td"},"speech,dtmf"))))),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Example"),"  "),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},'async function handler (request, response) {\n  await response.answer();\n  const stream = await response.sgather({source: "dtmf,speech"});\n\n  stream.on("transcript", (text, isFinal) => {\n     console.log("transcript: %s", text);\n  })\n\n  stream.on("dtmf", digit => {\n     console.log("digit: " + digit);\n     if (digit === "#") stream.close();\n  })\n}\n')),(0,r.kt)("a",{name:"VoiceResponse+dtmf"}),(0,r.kt)("h3",{id:"voiceresponsedtmfoptions"},"voiceResponse.dtmf(options)"),(0,r.kt)("p",null,"Sends dtmf tones to the current session."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Kind"),": instance method of ",(0,r.kt)("a",{parentName:"p",href:"#VoiceResponse"},(0,r.kt)("code",null,"VoiceResponse")),"  "),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Param"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"options"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"DtmfOptions")),(0,r.kt)("td",{parentName:"tr",align:null},"Options object for the Dtmf verb")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"options.dtmf"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"string")),(0,r.kt)("td",{parentName:"tr",align:null},"A string of the dtmf tones")))),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Example"),"  "),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},'async function handler (request, response) {\n   await response.answer();\n   await response.play("sound:hello-world");\n   await response.dtmf({dtmf: "1234"});\n}\n')),(0,r.kt)("a",{name:"VoiceResponse+dial"}),(0,r.kt)("h3",{id:"voiceresponsedialdestination-options--statusstream"},"voiceResponse.dial(destination, options) \u21d2 ",(0,r.kt)("code",null,"StatusStream")),(0,r.kt)("p",null,"Forwards the call to an Agent or the PSTN."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Kind"),": instance method of ",(0,r.kt)("a",{parentName:"p",href:"#VoiceResponse"},(0,r.kt)("code",null,"VoiceResponse")),(0,r.kt)("br",{parentName:"p"}),"\n",(0,r.kt)("strong",{parentName:"p"},"Returns"),": ",(0,r.kt)("code",null,"StatusStream")," - The StatusStream fires events via the ",(0,r.kt)("inlineCode",{parentName:"p"},"on")," method for ",(0,r.kt)("inlineCode",{parentName:"p"},"progress"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"answer"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"noanswer"),", and ",(0,r.kt)("inlineCode",{parentName:"p"},"busy"),". And the stream can be close\nwith the ",(0,r.kt)("inlineCode",{parentName:"p"},"close")," function.  "),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Param"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"destination"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"string")),(0,r.kt)("td",{parentName:"tr",align:null},"Number or Agent to forward the call to")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"options"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"DialOptions")),(0,r.kt)("td",{parentName:"tr",align:null},"Options object for the Dial verb")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"options.timeout"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"timeout")),(0,r.kt)("td",{parentName:"tr",align:null},"Dial timeout")))),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Example"),"  "),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},'async function handler (request, response) {\n   await response.answer();\n   await response.say("dialing number");\n   const stream = await response.dial("17853178070");\n   stream.on("progress", console.log)\n   stream.on("answer", console.log)\n   stream.on("busy", console.log)\n}\n')),(0,r.kt)("a",{name:"VoiceResponse+playback"}),(0,r.kt)("h3",{id:"voiceresponseplaybackplaybackid"},"voiceResponse.playback(playbackId)"),(0,r.kt)("p",null,"Returns a PlaybackControl control object."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Kind"),": instance method of ",(0,r.kt)("a",{parentName:"p",href:"#VoiceResponse"},(0,r.kt)("code",null,"VoiceResponse")),(0,r.kt)("br",{parentName:"p"}),"\n",(0,r.kt)("strong",{parentName:"p"},"See"),": Play  "),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Param"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"playbackId"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"string")),(0,r.kt)("td",{parentName:"tr",align:null},"Playback identifier to use in Playback operations")))),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Example"),"  "),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},'async function handler (request, response) {\n  await response.answer();\n  response.onDtmfReceived(async(digit) => {\n     const control = response.playback("1234")\n     digit === "3"\n       ? await control.restart()\n       : await control.forward()\n  })\n\n  await response.play("https://soundsserver:9000/sounds/hello-world.wav", {\n     playbackId: "1234"\n  });\n}\n')),(0,r.kt)("a",{name:"VoiceResponse+on"}),(0,r.kt)("h3",{id:"voiceresponseonhandler"},"voiceResponse.on(handler)"),(0,r.kt)("p",null,"Listens event publication."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Kind"),": instance method of ",(0,r.kt)("a",{parentName:"p",href:"#VoiceResponse"},(0,r.kt)("code",null,"VoiceResponse")),"  "),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Param"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"handler"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"function")),(0,r.kt)("td",{parentName:"tr",align:null},"Event handler")))),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Example"),"  "),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},'async function handler (request, response) {\n  await response.answer();\n  response.on("DtmfReceived", async(digit) => {\n     const control = response.playback("1234")\n     digit === "3"\n       ? await control.restart()\n       : await control.forward()\n  })\n\n  await response.play("https://soundsserver:9000/sounds/hello-world.wav", {\n     playbackId: "1234"\n  });\n}\n')),(0,r.kt)("a",{name:"VoiceResponse+mute"}),(0,r.kt)("h3",{id:"voiceresponsemuteoptions"},"voiceResponse.mute(options)"),(0,r.kt)("p",null,"Mutes a channel."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Kind"),": instance method of ",(0,r.kt)("a",{parentName:"p",href:"#VoiceResponse"},(0,r.kt)("code",null,"VoiceResponse")),(0,r.kt)("br",{parentName:"p"}),"\n",(0,r.kt)("strong",{parentName:"p"},"See"),": unmute  "),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Param"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"options"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"MuteOptions")),(0,r.kt)("td",{parentName:"tr",align:null},"Indicate which direction of he communication to mute")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"options.direction"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"string")),(0,r.kt)("td",{parentName:"tr",align:null},"Possible values are 'in', 'out', and 'both'")))),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Example"),"  "),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"async function handler (request, response) {\n  await response.answer();\n  await response.mute();       // Will mute both directions\n}\n")),(0,r.kt)("a",{name:"VoiceResponse+unmute"}),(0,r.kt)("h3",{id:"voiceresponseunmuteoptions"},"voiceResponse.unmute(options)"),(0,r.kt)("p",null,"Unmutes a channel."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Kind"),": instance method of ",(0,r.kt)("a",{parentName:"p",href:"#VoiceResponse"},(0,r.kt)("code",null,"VoiceResponse")),(0,r.kt)("br",{parentName:"p"}),"\n",(0,r.kt)("strong",{parentName:"p"},"See"),": mute  "),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Param"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"options"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"MuteOptions")),(0,r.kt)("td",{parentName:"tr",align:null},"Indicate which direction of he communication to unmute")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"options.direction"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"string")),(0,r.kt)("td",{parentName:"tr",align:null},"Possible values are 'in', 'out', and 'both'")))),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Example"),"  "),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},'async function handler (request, response) {\n  ...\n  await response.unmute({direction: "out"});       // Will unmute only the "out" direction\n}\n')),(0,r.kt)("a",{name:"VoiceResponse+answer"}),(0,r.kt)("h3",{id:"voiceresponseanswer"},"voiceResponse.answer()"),(0,r.kt)("p",null,"Answer the communication channel. Before running any other verb you\nmust run the anwer command."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Kind"),": instance method of ",(0,r.kt)("a",{parentName:"p",href:"#VoiceResponse"},(0,r.kt)("code",null,"VoiceResponse")),(0,r.kt)("br",{parentName:"p"}),"\n",(0,r.kt)("strong",{parentName:"p"},"Example"),"  "),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"async function handler (request, response) {\n  await response.answer();\n  ...\n}\n")),(0,r.kt)("a",{name:"VoiceResponse+hangup"}),(0,r.kt)("h3",{id:"voiceresponsehangup"},"voiceResponse.hangup()"),(0,r.kt)("p",null,"Terminates the communication channel."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Kind"),": instance method of ",(0,r.kt)("a",{parentName:"p",href:"#VoiceResponse"},(0,r.kt)("code",null,"VoiceResponse")),(0,r.kt)("br",{parentName:"p"}),"\n",(0,r.kt)("strong",{parentName:"p"},"Example"),"  "),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"async function handler (request, response) {\n  ...\n  await response.hangup();\n}\n")),(0,r.kt)("a",{name:"VoiceResponse+record"}),(0,r.kt)("h3",{id:"voiceresponserecordoptions--promiserecordresult"},"voiceResponse.record(options) \u21d2 ",(0,r.kt)("code",null,"Promise.","<","RecordResult",">")),(0,r.kt)("p",null,"Records the current channel and uploads the file to the storage subsystem."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Kind"),": instance method of ",(0,r.kt)("a",{parentName:"p",href:"#VoiceResponse"},(0,r.kt)("code",null,"VoiceResponse")),(0,r.kt)("br",{parentName:"p"}),"\n",(0,r.kt)("strong",{parentName:"p"},"Returns"),": ",(0,r.kt)("code",null,"Promise.","<","RecordResult",">")," - Returns useful information such as the duration of the recording, etc.  "),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Param"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"options"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"RecordOptions")),(0,r.kt)("td",{parentName:"tr",align:null},"optional parameters to alter the command's normal behavior")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"options.maxDuration"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"number")),(0,r.kt)("td",{parentName:"tr",align:null},"Maximum duration of the recording, in seconds. Use ",(0,r.kt)("inlineCode",{parentName:"td"},"0")," for no limit")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"options.maxSilence"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"number")),(0,r.kt)("td",{parentName:"tr",align:null},"Maximum duration of silence, in seconds. Use ",(0,r.kt)("inlineCode",{parentName:"td"},"0")," for no limit")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"options.beep"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"boolean")),(0,r.kt)("td",{parentName:"tr",align:null},"Play beep when recording begins")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"options.finishOnKey"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"string")),(0,r.kt)("td",{parentName:"tr",align:null},"DTMF input to terminate recording")))),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Example"),"  "),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},'async function handler (request, response) {\n  await response.answer();;\n  const result = await response.record({finishOnKey: "#"});\n  console.log("recording result: " + JSON.stringify(result))     // recording result: { duration: 30 ...}\n}\n')))}d.isMDXComponent=!0}}]);